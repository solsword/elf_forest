// integers
[[c test

[[i t 0]]
[[i t 12]]
[[i t 99947845612301310]]
[[i t -15]]
[[i t 0xabcdef]]
[[i t 0xa0b0c0d0e0f0]]
[[i t 0x80ff90ffa0ffb0ff]]
[[i t 0x80ff90ffa0ffb0ff00ff10ff20ff30ff]]
[[i t 0x80ff90ffa0ffb0ff00ff10ff20ff30ff34567890]]
[[i t -0xff]]
[[i t 0x0001]]
[[o t1:itest
  [[s input ""]]
  [[s expect "failure"]]
]]
[[o t2:itest
  [[s input "1"]]
  [[s expect "success"]]
  [[i output 1]]
]]
[[o t3:itest
  [[s input "0"]]
  [[s expect "success"]]
  [[i output 0]]
]]
[[o t4:itest
  [[s input "10"]]
  [[s expect "success"]]
  [[i output 10]]
]]
[[o t5:itest
  [[s input "23"]]
  [[s expect "success"]]
  [[i output 23]]
]]
[[o t6:itest
  [[s input "0x1"]]
  [[s expect "success"]]
  [[i output 1]]
]]
[[o t7:itest
  [[s input "0xa"]]
  [[s expect "success"]]
  [[i output 10]]
]]
[[o t8:itest
  [[s input "0x1a"]]
  [[s expect "success"]]
  [[i output 26]]
]]
[[o t9:itest
  [[s input "0x0001"]]
  [[s expect "success"]]
  [[i output 1]]
]]
[[o t10:itest
  [[s input "0xff"]]
  [[s expect "success"]]
  [[i output 255]]
]]
[[o t11:itest
  [[s input "0xf9"]]
  [[s expect "success"]]
  [[i output 249]]
]]
[[o t12:itest
  [[s input "249"]]
  [[s expect "success"]]
  [[i output 0xf9]]
]]
[[o t13:itest
  [[s input "-3"]]
  [[s expect "success"]]
  [[i output -0x03]]
]]
[[o t14:itest
  [[s input "-0x10"]]
  [[s expect "success"]]
  [[i output -16]]
]]
[[o t15:itest
  [[s input "00"]]
  [[s expect "failure"]]
]]
[[o t16:itest
  [[s input "ff"]]
  [[s expect "failure"]]
]]
[[o t17:itest
  [[s input "c9"]]
  [[s expect "failure"]]
]]
[[o t18:itest
  [[s input "--3"]]
  [[s expect "failure"]]
]]
[[o t19:itest
  [[s input "03"]]
  [[s expect "failure"]]
]]
[[o t20:itest
  [[s input "0x-5"]]
  [[s expect "remainder"]]
  [[i output 0]]
  [[s remainder "x-5"]]
]]
[[o t21:itest
  [[s input "-x35"]]
  [[s expect "failure"]]
]]
[[o t22:itest
  [[s input "0x"]]
  [[s expect "remainder"]]
  [[i output 0]]
  [[s remainder "x"]]
]]
[[o t23:itest
  [[s input "19ab"]]
  [[s expect "remainder"]]
  [[i output 19]]
  [[s remainder "ab"]]
]]
[[o t24:itest
  [[s input "0-2"]]
  [[s expect "remainder"]]
  [[i output 0]]
  [[s remainder "-2"]]
]]
[[o t25:itest
  [[s input "0xff-"]]
  [[s expect "remainder"]]
  [[i output 0xff]]
  [[s remainder "-"]]
]]
[[o t26:itest
  [[s input "123-"]]
  [[s expect "remainder"]]
  [[i output 123]]
  [[s remainder "-"]]
]]
[[o t27:itest
  [[s input "120x456"]]
  [[s expect "remainder"]]
  [[i output 120]]
  [[s remainder "x456"]]
]]
// numbers
[[n t28 0.5]]
[[n t29 182.1922]]
[[n t30 1e7]]
[[n t31 1.4e3]]
[[n t32 .4e3]]
[[n t33 4.e3]]
[[n t34 0]]
[[n t35 1]]
[[o t36:ntest
  [[s input ""]]
  [[s expect "failure"]]
]]
[[o t37:ntest
  [[s input "0"]]
  [[s expect "success"]]
  [[n output 0]]
]]
[[o t38:ntest
  [[s input "1"]]
  [[s expect "success"]]
  [[n output 1]]
]]
[[o t39:ntest
  [[s input "1"]]
  [[s expect "success"]]
  [[n output 1.0]]
]]
[[o t40:ntest
  [[s input "0.0"]]
  [[s expect "success"]]
  [[n output 0]]
]]
[[o t41:ntest
  [[s input "1."]]
  [[s expect "success"]]
  [[n output 1.0]]
]]
[[o t42:ntest
  [[s input "0003.5"]]
  [[s expect "failure"]]
]]
[[o t43:ntest
  [[s input "0.."]]
  [[s expect "remainder"]]
  [[n output 0]]
  [[s remainder "."]]
]]
[[o t44:ntest
  [[s input "1e+-2"]]
  [[s expect "remainder"]]
  [[n output 1]]
  [[s remainder "e+-2"]]
]]
[[o t45:ntest
  [[s input "1e-+2"]]
  [[s expect "remainder"]]
  [[n output 1]]
  [[s remainder "e-+2"]]
]]
[[o t46:ntest
  [[s input "1e++2"]]
  [[s expect "remainder"]]
  [[n output 1]]
  [[s remainder "e++2"]]
]]
[[o t47:ntest
  [[s input "-2e--2"]]
  [[s expect "remainder"]]
  [[n output -2]]
  [[s remainder "e--2"]]
]]
[[o t48:ntest
  [[s input "1+2"]]
  [[s expect "remainder"]]
  [[n output 1]]
  [[s remainder "+2"]]
]]
[[o t49:ntest
  [[s input "1-2"]]
  [[s expect "remainder"]]
  [[n output 1]]
  [[s remainder "-2"]]
]]
[[o t50:ntest
  [[s input "1.-2"]]
  [[s expect "remainder"]]
  [[n output 1]]
  [[s remainder "-2"]]
]]
// misc:
[[o t51:ptest
  [[s input "[[s name_very_long______________ 'this''ll work']]"]]
  [[s expect "success"]]
]]
[[o t52:ptest
  [[s input "[[s name_that's_fine 'this will work']]"]]
  [[s expect "success"]]
]]
// strings:
[[s t53 "test"]]
[[s t54 'test']]
[[s t55 "string ' with embedded ' quotes"]]
[[s t56 'string " with embedded " quotes']]
[[s t57 "string "" with embedded "" quotes"]]
[[s t58 'string '' with embedded '' quotes']]
[[s name-with~some$chrs&*% "this name should be just fine"]]
[[s really_long_name_that_is_very_long_and_gets_used_just_fine_anyways_because_the_language_allows_that_so_shut_up "test" ]]
[[s なまえ "名前" ]]
// object (rngtable):
[[o test_object:rngtable
  [[i size 7]]
  [[ai values
    1, 2,
    3,
    4, 5,
    6, 7,
  ]]
  [[an weights
    0.40, 0.35, // 75% |  75%
    0.10,       // 10% |  85%
    0.05, 0.05, // 10% |  95%
    0.03, 0.02, //  5% | 100%
  ]]
]]

// globals:
[[Gi GLOBAL_INT 5]]
[[Gn GLOBAL_NUM 3.1415926]]
[[Gs GLOBAL_STR "This string goes directly into the globals..."]]

// references:
[[i refint 3]]
<<L test.refint>>
<<L test.refint@linkint>>
[[n refnum 3.5]]
<<L test.refnum@linknum>>
<<L test.refnum@linknum>>
[[s refstr "reference string"]]
<<L test.refstr@linkstr>>
<<L test.なまえ@name>>
[[c testref
  <<L test.refint>>
  <<L test.refnum>>
  <<L test.refstr@rntest>>
  [[i test 7]]
]]
[[c tr2
  <<L test.testref>>
  <<L test.testref.refint>>
  <<L test.testref.refnum>>
  <<L test.testref.rntest>>
  <<L test.testref.test>>
]]
<<L test.testref@copy>>
<<L test.copy.test@overtest>>
[[c scope
  [[i i 3]]
  <<l i@j>>
  [[c nest1
    [[i i 5]]
    <<l ^.nest2.i@j>>
  ]]
  [[c nest2
    [[i i 7]]
    <<l ^.nest1.i@j>>
  ]]
]]
[[c tr3
  [[ai array
    1, 2, 3, #i:GLOBAL_INT
  ]]
]]

//functions and variable references
[[c testfun
  [[V locals
    <<L test.testref@~link>>
    [[i ~int 3]]
    [[n ~num 5.7]]
    [[s ~string "hello world"]]
    <<l ~int@~integer>>
    <<v ~int@~varint>>
    [[c ~tuple (n 1.1) (n 2.2) ]]
    [[c ~slist (s "one") (s "two") (s "three") (s "four")]]
    [[as ~sarray "wun", "tuo", "threigh", "foor"]]
    [[fi ~ichoice:choose
      <<v ~int>>
      (i 0)
      (i 1)
      (i 2)
      (i 3)
    ]]
    [[ff ~fchoice:choose
      <<v ~int>>
      [[c _ (s "hi")]]
      [[c _ (s "ho")]]
      [[c _ (s "he")]]
      [[c _ (s "ha")]]
    ]]
  ]]
  [[c test
    [[V nested
      [[i ~int 1]]
    ]]
    <<v ~int@testint>>
    <<v ~ichoice@testscope>>
  ]]
  [[ff testiter:iterate
    [[V iter_vars
      <<v ~slist@*lstring>>
      <<v ~sarray@*astring>>
      [[gi *iter1:range (i 1) ]]
      [[gi *iter2:range (i 3) (i 8) (i 2) ]]
      [[gi *iter3:extend
        [[gi iter:range (i 1) (i 2) ]]
        (i #i:EFD_GT_EXTEND_HOLD)
      ]]
      [[gi *iter4:extend
        [[gi iter:range (i 1) (i 2) ]]
        (i #i:EFD_GT_EXTEND_RESTART)
      ]]
    ]]
    [[c values
      <<v *lstring>>
      <<v *asring>>
      <<v *iter1>>
      <<v *iter2>>
      <<v *iter3>>
      <<v *iter4>>
    ]]
    [[fs cat:cat <<v *lstring>> (s "-") <<v *astring>> ]]
    [[fi plus:add <<v *iter1>> <<v *iter2>> ]]
  ]]
  [[fi plus:add
    [[fn rng:ptrf [[fi hash:brng [[fi rng:prng (i 17) ]] (i 1) ]] ]]
    <<v ~integer>>
  ]]
  [[fi plus:add
    (i 3)
    <<v ~integer>>
    (i 5)
  ]]
  [[fs index_1:index <<v ~fchoice>> (i 0) ]]
  [[fs index_2:index <<v ~slist>> (i 1) ]]
  [[fs index_3:index <<v ~sarray>> (i 1) ]]
  [[fs index_4:index <<l testiter>> (i 1) ]]
]]
[[c varscope
  [[V vars
    [[i ~int 1]]
    [[i ~other 17]]
    [[i ~over 8]]
    [[c ~struct
      [[n num 3.5]]
      [[n pi 3.1415926]]
      <<v ~over@over>>
    ]]
  ]]
  [[c nested
    [[V vars
      [[i ~over 1000]]
      <<v ~other@~vv>>
    ]]
    <<v ~int@t_int>>
    <<v ~other@t_other>>
    <<v ~over@t_over>>
    <<v ~vv@t_v>>
    <<v ~struct.num@t_num>>
    <<v ~struct.over@t_sover>>
  ]]
  [[ff nlink:call
    <<l ^.nested>>
    [[V vars
      [[i ~over 890]]
      [[i ~other 77]]
    ]]
  ]]
]]

[[ff other_95:call <<l ^.varscope>> [[V vars [[i ~other 95]] ]] ]]
[[ff over_999:call <<l ^.varscope>> [[V vars [[i ~over 999]] ]] ]]
[[ff other_350:call <<l ^.varscope>> [[V vars [[i ~other 350]] ]] ]]
[[ff over_35:call <<l ^.varscope>> [[V vars [[i ~over 35]] ]] ]]

<<l varscope.nested.t_v@inner_link>>
[[fi inner_link_v:peek <<l ^.other_95>> <<l nested.t_v>> ]]
<<l varscope.nested.t_over@inner_link_over>>

<<l varscope@ref1>>
<<l other_350@ref2>>
<<l over_35@ref3>>

[[o t59:evtest <<L test.inner_link>> (i 17) ]]
[[o t60:evtest <<L test.inner_link_v>> (i 95) ]]
[[o t61:evtest
  [[fi p:peek <<L test.over_999>> <<l nested.t_over>> ]]
  (i 1000)
]]
[[o t62:evtest
  [[fi p:peek <<L test.other_350>> <<l nested.t_other>> ]]
  (i 350)
]]

[[o t63:evtest <<L test.varscope.nested.t_int>> (i 1) ]]
[[o t64:evtest <<L test.varscope.nested.t_other>> (i 17) ]]
[[o t65:evtest <<L test.varscope.nested.t_over>> (i 1000) ]]
[[o t66:evtest <<L test.varscope.nested.t_v>> (i 17) ]]
[[o t67:evtest <<L test.varscope.nested.t_num>> (n 3.5) ]]
[[o t68:evtest <<L test.varscope.nested.t_sover>> (i 8) ]]
[[o t69:evtest [[fi p:peek <<L test.varscope.nlink>> <<l t_over>> ]] (i 890) ]]
[[o t70:evtest [[fi p:peek <<L test.varscope.nlink>> <<l t_sover>> ]] (i 8) ]]
[[o t71:evtest [[fi p:peek <<L test.varscope.nlink>> <<l t_other>> ]] (i 77) ]]
[[o t72:evtest [[fi p:peek <<L test.varscope.nlink>> <<l t_v>> ]] (i 77) ]]

[[o t73:evtest <<L test.ref1.nested.t_int>> (i 1) ]]
[[o t74:evtest <<L test.ref1.nested.t_other>> (i 17) ]]
[[o t75:evtest <<L test.ref1.nested.t_over>> (i 1000) ]]
[[o t76:evtest <<L test.ref1.nested.t_v>> (i 17) ]]
[[o t77:evtest <<L test.ref1.nested.t_num>> (n 3.5) ]]
[[o t78:evtest <<L test.ref1.nested.t_sover>> (i 8) ]]
[[o t79:evtest [[fi p:peek <<L test.ref1.nlink>> <<l t_over>> ]] (i 890) ]]
[[o t80:evtest [[fi p:peek <<L test.ref1.nlink>> <<l t_sover>> ]] (i 8) ]]
[[o t81:evtest [[fi p:peek <<L test.ref1.nlink>> <<l t_other>> ]] (i 77) ]]
[[o t82:evtest [[fi p:peek <<L test.ref1.nlink>> <<l t_v>> ]] (i 77) ]]

[[o t83:evtest
  [[fi p:peek <<L test.ref2>> <<l nested.t_int>> ]]
  (i 1)
]]
[[o t84:evtest
  [[fi p:peek <<L test.ref2>> <<l nested.t_other>> ]]
  (i 350)
]]
[[o t85:evtest
  [[fi p:peek <<L test.ref2>> <<l nested.t_over>> ]]
  (i 1000)
]]
[[o t86:evtest
  [[fi p:peek <<L test.ref2>> <<l nested.t_v>> ]]
  (i 350)
]]
[[o t87:evtest
  [[fi p:peek <<L test.ref2>> <<l nested.t_num>> ]]
  (n 3.5)
]]
[[o t88:evtest
  [[fi p:peek <<L test.ref2>> <<l nested.t_sover>> ]]
  (i 8)
]]
[[o t89:evtest
  [[fi p:peek [[ff p:peek <<L test.ref2>> <<l nlink>> ]] <<l t_over>> ]]
  (i 890)
]]
[[o t90:evtest
  [[fi p:peek [[ff p:peek <<L test.ref2>> <<l nlink>> ]] <<l t_sover>> ]]
  (i 8)
]]
[[o t91:evtest
  [[fi p:peek [[ff p:peek <<L test.ref2>> <<l nlink>> ]] <<l t_other>> ]]
  (i 77)
]]
[[o t92:evtest
  [[fi p:peek [[ff p:peek <<L test.ref2>> <<l nlink>> ]] <<l t_v>> ]]
  (i 77)
]]

[[o t93:evtest
  [[fi p:peek <<L test.ref3>> <<l nested.t_int>> ]]
  (i 1)
]]
[[o t94:evtest
  [[fi p:peek <<L test.ref3>> <<l nested.t_other>> ]]
  (i 17)
]]
[[o t95:evtest
  [[fi p:peek <<L test.ref3>> <<l nested.t_over>> ]]
  (i 1000)
]]
[[o t96:evtest
  [[fi p:peek <<L test.ref3>> <<l nested.t_v>> ]]
  (i 17)
]]
[[o t97:evtest
  [[fi p:peek <<L test.ref3>> <<l nested.t_num>> ]]
  (n 3.5)
]]
[[o t98:evtest
  [[fi p:peek <<L test.ref3>> <<l nested.t_sover>> ]]
  (i 35)
]]
[[o t99:evtest
  [[fi p:peek [[ff p:peek <<L test.ref3>> <<l nlink>> ]] <<l t_over>> ]]
  (i 890)
]]
[[o t100:evtest
  [[fi p:peek [[ff p:peek <<L test.ref3>> <<l nlink>> ]] <<l t_sover>> ]]
  (i 35)
]]
[[o t101:evtest
  [[fi p:peek [[ff p:peek <<L test.ref3>> <<l nlink>> ]] <<l t_other>> ]]
  (i 77)
]]
[[o t102:evtest
  [[fi p:peek [[ff p:peek <<L test.ref3>> <<l nlink>> ]] <<l t_v>> ]]
  (i 77)
]]

[[c fn_test_scope
  [[V defaults
    [[i ~addend 1]]
  ]]
  [[fi plus_one:add
    [[V args
      [[i ~int 5]]
    ]]
    <<v ~int>>
    <<v ~addend>>
  ]]
]]
<<l fn_test_scope.plus_one@noargs>>
<<l noargs@chained>>
[[fi wargs:call
  <<l ^.fn_test_scope.plus_one>>
  [[V args [[i ~int 17]] ]]
]]
<<l wargs@chainedargs>>

[[ff fn_test_other_scope:call
  <<l ^.fn_test_scope>>
  [[V args
    [[i ~addend 8]]
  ]]
]]

[[fi other_noargs:peek <<L test.fn_test_other_scope >> <<l plus_one>> ]]
<<l other_noargs@other_chained>>

[[o t103:evtest <<L test.noargs>> (i 6) ]]
[[o t104:evtest <<L test.chained>> (i 6) ]]
[[o t105:evtest <<L test.wargs>> (i 18) ]]
[[o t106:evtest <<L test.chainedargs>> (i 18) ]]

[[o t107:evtest <<L test.other_noargs>> (i 13) ]]
[[o t108:evtest <<L test.other_chained>> (i 13) ]]

]] // c test
